import 'package:drift/drift.dart';
import 'package:zxplore_app/src/api/models/offline_account_model.dart';
import 'package:zxplore_app/src/database/database.dart';

extension OfflineAccountModelToEntityCompanion on OfflineAccountModel {
  OfflineAccountEntityCompanion toEntityCompanion() {
    return OfflineAccountEntityCompanion(
      accountCategory: Value(accountCategory),
      accountHolderType: Value(accountHolderType),
      accountType: Value(accountType),
      address1: Value(address1),
      address2: Value(address2),
      bvn: Value(bvn),
      cityOfResidence: Value(cityOfResidence),
      countryOfOrigin: Value(countryOfOrigin),
      countryOfResidence: Value(countryOfResidence),
      dateOfBirth: Value(dateOfBirth),
      email: Value(email),
      firstName: Value(firstName),
      gender: Value(gender),
      idCard: Value(idCard),
      idExpiryDate: Value(idExpiryDate),
      idIssueDate: Value(idIssueDate),
      idIssuer: Value(idIssuer),
      idNumber: Value(idNumber),
      idPlaceOfIssue: Value(idPlaceOfIssue),
      idType: Value(idType),
      isReceiveAlert: Value(isReceiveAlert),
      isRequestHardwareToken: Value(isRequestHardwareToken),
      isRequestInternetBanking: Value(isRequestInternetBanking),
      isSendEmail: Value(isSendEmail),
      maritalStatus: Value(maritalStatus),
      mothersMaidenName: Value(mothersMaidenName),
      nextOfKin: Value(nextOfKin),
      occupation: Value(occupation),
      otherName: Value(otherName),
      passport: Value(passport),
      phone: Value(phone),
      referenceId: Value(referenceId),
      riskRank: Value(riskRank),
      signature: Value(signature),
      stateOfOrigin: Value(stateOfOrigin),
      stateOfResidence: Value(stateOfResidence),
      surname: Value(surname),
      title: Value(title),
      utility: Value(utility),
    );
  }
}

extension OfflineAccountToDBModel on OfflineAccountModel {
  OfflineAccount toDBModel() {
    return OfflineAccount(
      accountCategory: accountCategory,
      accountHolderType: accountHolderType,
      accountType: accountType,
      address1: address1,
      address2: address2,
      bvn: bvn,
      cityOfResidence: cityOfResidence,
      countryOfOrigin: countryOfOrigin,
      countryOfResidence: countryOfResidence,
      dateOfBirth: dateOfBirth,
      email: email,
      firstName: firstName,
      gender: gender,
      id: id!,
      idCard: idCard,
      idExpiryDate: idExpiryDate,
      idIssueDate: idIssueDate,
      idIssuer: idIssuer,
      idNumber: idNumber,
      idPlaceOfIssue: idPlaceOfIssue,
      idType: idType,
      isReceiveAlert: isReceiveAlert,
      isRequestHardwareToken: isRequestHardwareToken,
      isRequestInternetBanking: isRequestInternetBanking,
      isSendEmail: isSendEmail,
      maritalStatus: maritalStatus,
      mothersMaidenName: mothersMaidenName,
      nextOfKin: nextOfKin,
      occupation: occupation,
      otherName: otherName,
      passport: passport,
      phone: phone,
      referenceId: referenceId,
      riskRank: riskRank,
      signature: signature,
      stateOfOrigin: stateOfOrigin,
      stateOfResidence: stateOfResidence,
      surname: surname,
      title: title,
      utility: utility,
    );
  }
}

extension OfflineAccountToModel on OfflineAccount {
  OfflineAccountModel toDomainModel() {
    return OfflineAccountModel(
      accountCategory: accountCategory,
      accountHolderType: accountHolderType,
      accountType: accountType,
      address1: address1,
      address2: address2,
      bvn: bvn,
      cityOfResidence: cityOfResidence,
      countryOfOrigin: countryOfOrigin,
      countryOfResidence: countryOfResidence,
      dateOfBirth: dateOfBirth,
      email: email,
      firstName: firstName,
      gender: gender,
      id: id,
      idCard: idCard,
      idExpiryDate: idExpiryDate,
      idIssueDate: idIssueDate,
      idIssuer: idIssuer,
      idNumber: idNumber,
      idPlaceOfIssue: idPlaceOfIssue,
      idType: idType,
      isReceiveAlert: isReceiveAlert,
      isRequestHardwareToken: isRequestHardwareToken,
      isRequestInternetBanking: isRequestInternetBanking,
      isSendEmail: isSendEmail,
      maritalStatus: maritalStatus,
      mothersMaidenName: mothersMaidenName,
      nextOfKin: nextOfKin,
      occupation: occupation,
      otherName: otherName,
      passport: passport,
      phone: phone,
      referenceId: referenceId,
      riskRank: riskRank,
      signature: signature,
      stateOfOrigin: stateOfOrigin,
      stateOfResidence: stateOfResidence,
      surname: surname,
      title: title,
      utility: utility,
    );
  }
}
